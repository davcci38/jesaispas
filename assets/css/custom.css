@import url('https://fonts.googleapis.com/css2?family=Honk&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Black+Ops+One&family=Honk&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Nabla&display=swap');
:root {
    --couleur-primaire : linear-gradient(-45deg, blue 10%, blue 25%, black 51%, #ff357f 100%);
font-family: 'Black Ops One', system-ui;
 }
p {
color: white;
  font-family: 'Black Ops One', system-ui;
 text-decoration: underline;
  text-decoration-color: white;
 text-decoration-line: underline;
  
}
h1 {
 color: blue;
 font-size: 100;
 font-family: 'Nabla', system-ui;
 color: white;
  text-shadow: 1px 1px 2px black, 0 0 25px 
 white, 0 0 5px darkblue;
 transform: rotate3d(x, y, z, a);


 }

body {

  width: 100%;
  height: 100vh;
  display: block;
  align-items: center;
  justify-content: center;
  background-size: 300% 300%;
  background-image: linear-gradient(-45deg, green 10%, black 25%, blue 51%, #ff357f 100%);
  -webkit-animation: AnimateBG 20s ease infinite;
          animation: AnimateBG 20s ease infinite;
}

@-webkit-keyframes AnimateBG {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes AnimateBG {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@import 'compass/css3';

$l: 32vmin;

$n-3gon: 3;
$ca-3gon: 360deg/$n-3gon;
$a-3gon: ($n-3gon - 2)*180deg/$n-3gon;
$rc-3gon: .5*$l/sin(.5*$ca-3gon);
$ri-3gon: .5*$l/tan(.5*$ca-3gon);
$h-3gon: $l*sin($a-3gon);

$n-4hedron: 4;
$dee-4hedron: $l/sqrt(2);
$da-4hedron: 180deg/pi()*acos($ri-3gon/$h-3gon);

body {
  overflow: hidden;
  height: 100vh;
  perspective: 20em;
  background: #000; color: #fff;
}

div, :before, :after {
  position: absolute;
  top: 50%; left: 50%;
  transform-style: preserve-3d;
  background: inherit;
  animation: inherit;
}

.s4hedron { animation: r 10s ease-in-out infinite; }

@keyframes r {
  0%, 10% { transform: none; }
  90%, 100% { transform: rotateY(3.125turn); }
}

.scaler { animation-name: s; }

@keyframes s {
  0%, 90% { transform: none; }
  100% { transform: scale3d(0,0,0); }
}

.s3gon {
  &:before, &:after {
    margin: -$h-3gon (-$rc-3gon);
    width: 2*$rc-3gon; height: 2*$rc-3gon;
    clip-path: url(#i);
    animation: none;
    content: '';
  }
  
  &:before { opacity: .75; }
  
  &:after {
    background: currentColor;
    clip-path: url(#o);
  }
  
  @for $i from 0 to $n-4hedron {
    $j: $i%2;
    $k: floor($i/2);
    $s: pow(-1, $k);
    $ax1: pow(-1, $j)*.5*$da-4hedron;
    $ax2: $ax1 + $s*90deg;
    $a: $s*45deg;
    $d: $s*.5*$dee-4hedron;
    
    &:nth-child(#{$i + 1}) { animation-name: a-#{$i + 1}; }
    
    @keyframes a-#{$i + 1} {
      0% { transform: scale(0); }
      10% { transform: none; }
      30% { transform: translateZ(0)  rotate(0deg) rotateX($ax1); }
      50% { transform: translateZ(0)  rotate(0deg) rotateX($ax2); }
      65% { transform: translateZ(0)  rotate($a) rotateX($ax2); }
      80%, 100% { transform: translateZ($d)  rotate($a) rotateX($ax2); }
    }
  }
}
